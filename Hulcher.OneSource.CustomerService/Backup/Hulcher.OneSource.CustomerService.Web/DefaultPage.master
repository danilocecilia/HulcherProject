<%@ Master Language="C#" MasterPageFile="~/BasePage.Master" AutoEventWireup="true"
    CodeBehind="DefaultPage.master.cs" Inherits="Hulcher.OneSource.CustomerService.Web.DefaultPage" %>

<%@ MasterType TypeName="Hulcher.OneSource.CustomerService.Web.BasePage" %>
<%@ Register Src="~/UserControls/DatePicker.ascx" TagName="DatePicker" TagPrefix="uc1" %>
<asp:Content ID="Content1" ContentPlaceHolderID="head" runat="server">
    <link href="Styles/TaskMenu.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" type="text/css" href="/Styles/jquery.jgrowl.css" />
    <asp:ContentPlaceHolder ID="head" runat="server">
    </asp:ContentPlaceHolder>
</asp:Content>
<asp:Content ID="Content2" ContentPlaceHolderID="ContentPlaceHolder1" runat="server">
    <div class="page">
        <div id="HeaderUser" class="HeaderUser">
            <div id="WelcomeInfo">
                <h1>
                    <asp:Label ID="lblWelcome" runat="server" Text="Welcome " />
                    <asp:Label ID="lblUsername" runat="server" />
                </h1>
            </div>
        </div>
        <div class="TopMenu">
            <div class="TopMenuButtons">
                <div id="menuJobRecord" runat="server" class="MenuItem">
                    <asp:Image ID="imgNewJob" runat="server" ImageUrl="~/Images/money.png" Width="24"
                        Height="32" AlternateText="New Job" /><br />
                    <asp:Label ID="lblNewJob" runat="server" Text="New Job"></asp:Label>
                </div>
                <div id="menuCallLog" runat="server" class="MenuItem" onclick="window.open('/CallEntry.aspx', '', 'width=800, height=600, scrollbars=1, resizable=yes');">
                    <asp:Image ID="imgNewCallEntry" runat="server" ImageUrl="~/Images/blackphone.gif"
                        Width="35px" Height="35px" AlternateText="New Call Entry" /><br />
                    <asp:Label ID="lblNewCall" runat="server" Text="New Call Entry"></asp:Label>
                </div>
                <div id="menuQuickReference" runat="server" class="MenuItem" onclick="window.open('/QuickReference.aspx', '', 'width=800, height=600, scrollbars=1, resizable=yes');">
                    <asp:Image ID="imgQuickReference" runat="server" ImageUrl="~/Images/scavenger.jpg"
                        Width="35px" Height="35px" AlternateText="Quick Reference" /><br />
                    <asp:Label ID="lblQuickRederence" runat="server" Text="Quick Reference"></asp:Label>
                </div>
                <div id="menuKeyPersons" runat="server" class="MenuItem" onclick="window.open('/ManagersLocation.aspx', '', 'width=800, height=600, scrollbars=1, resizable=yes');">
                    <asp:Image ID="imgKeyPersons" runat="server" ImageUrl="~/Images/keyperson.jpg" Width="35px"
                        Height="35px" AlternateText="Key Persons Location" /><br />
                    <asp:Label ID="lblKeyPersons" runat="server" Text="Key Persons Location"></asp:Label>
                </div>
                <div id="menuRouteMaintenance" runat="server" class="MenuItem" onclick="window.open('/RouteMaintenance.aspx', '', 'width=990, height=600, scrollbars=1, resizable=yes');">
                    <asp:Image ID="imgRouteMaintenance" runat="server" ImageUrl="~/Images/routeMaintenance.png"
                        Width="35px" Height="35px" AlternateText="Route Maintenance" /><br />
                    <asp:Label ID="lblRouteMaintenance" runat="server" Text="Route Maintenance"></asp:Label>
                </div>
                <div id="menuPhoneListing" runat="server" class="MenuItem" onclick="window.open('/PhoneListing.aspx', '', 'width=800, height=600, scrollbars=1, resizable=yes');">
                    <asp:Image ID="imgPhoneListing" runat="server" ImageUrl="~/Images/phoneListing.png"
                        Width="35px" Height="35px" AlternateText="Phone Numbers Listing" /><br />
                    <asp:Label ID="lblPhoneListing" runat="server" Text="Phone Number Listing"></asp:Label>
                </div>
                <div id="menuProjectCalendar" runat="server" class="MenuItem" onclick="window.open('/ProjectCalendar.aspx', '', 'width='+(screen.width)+', height='+(screen.height)+', scrollbars=1, resizable=yes');">
                    <asp:Image ID="imgProjectCalendar" runat="server" ImageUrl="~/Images/calendar_icon.png" Width="35px"
                        Height="35px" AlternateText="Project Calendar" /><br />
                    <asp:Label ID="lblProjectCalendar" runat="server" Text="Project Calendar"></asp:Label>
                </div>
            </div>
            <div class="TopMenuLogoRight">
                <div class="Text">
                    <asp:Label ID="lblLogoDescription" runat="server" Text="Hulcher - Customer Service Application" />
                </div>
                <div class="Image">
                    <asp:Image ID="imgLogo" runat="server" ImageUrl="~/Images/Logo.png" Width="65" Height="45"
                        AlternateText="Hulcher - Customer Service Application" />
                </div>
            </div>
        </div>
        <div id="LeftPanelToggle" >
            <img id="open" class="open" src="Images/navigation-right-frame.png" alt="open" width="24"
                height="24" />
            <div style="padding-top: 2px; text-align: center; writing-mode: tb-rl; filter: flipv fliph;
                height: 90%;">
                Task Menu / Job Search Criteria
            </div>
        </div>
        <div id="panel">
            <div id="LeftPanel">
                <div id="SearchPanelTitle">
                    <div style="float: left; display: inline; padding-top: 5px;">
                        <asp:Label ID="lblSearchTitle" Text="Job Search Criteria" runat="server"></asp:Label>
                    </div>
                    <div style="float: right; display: inline-block; padding-top: 2px;">
                        <img id="close" class="close" src="Images/navigation-left-frame.png" alt="close"
                            width="24" height="24" />
                    </div>
                </div>
                <div id="SearchPanel">
                    <asp:UpdatePanel ID="updSearch" runat="server">
                        <ContentTemplate>
                            <div class="SearchItemRow">
                                <asp:Label ID="lblContactInfo" runat="server" Text="Search By Contact Info"></asp:Label>
                                <div class="LeftItem">
                                    <asp:DropDownList ID="ddlContactInfo" runat="server" Width="90%">
                                    </asp:DropDownList>
                                </div>
                                <div class="RightItem">
                                    <asp:TextBox ID="txtContactInfo" CssClass="input" runat="server" Text="" Width="90%"
                                        onblur="selectAllItem(this.value, 1)"></asp:TextBox>
                                </div>
                            </div>
                            <br />
                            <div class="SearchItemRow">
                                <asp:Label ID="lblJobInfo" runat="server" Text="Search By Job Info"></asp:Label>
                                <div class="LeftItem">
                                    <asp:DropDownList ID="ddlJobInfo" runat="server" Width="90%">
                                    </asp:DropDownList>
                                </div>
                                <div class="RightItem">
                                    <asp:TextBox ID="txtJobInfo" CssClass="input" runat="server" Text="" Width="90%"
                                        onblur="selectAllItem(this.value, 2)"></asp:TextBox>
                                </div>
                            </div>
                            <br />
                            <div class="SearchItemRow">
                                <asp:Label ID="lblLocationInfo" runat="server" Text="Search By Location Info"></asp:Label>
                                <div class="LeftItem">
                                    <asp:DropDownList ID="ddlLocationInfo" runat="server" Width="90%">
                                    </asp:DropDownList>
                                </div>
                                <div class="RightItem">
                                    <asp:TextBox ID="txtLocationInfo" CssClass="input" runat="server" Text="" Width="90%"
                                        onblur="selectAllItem(this.value, 3)"></asp:TextBox>
                                </div>
                            </div>
                            <br />
                            <div class="SearchItemRow">
                                <asp:Label ID="lblJobDescription" runat="server" Text="Search By Job Description"></asp:Label>
                                <div class="LeftItem">
                                    <asp:DropDownList ID="ddlJobDescription" runat="server" Width="90%">
                                    </asp:DropDownList>
                                </div>
                                <div class="RightItem">
                                    <asp:TextBox ID="txtJobDescription" CssClass="input" runat="server" Text="" Width="90%"
                                        onblur="selectAllItem(this.value, 4)"></asp:TextBox>
                                </div>
                            </div>
                            <br />
                            <div class="SearchItemRow">
                                <asp:Label ID="lblEquipmentType" runat="server" Text="Search By Equipment Type"></asp:Label>
                                <div class="LeftItem">
                                    <asp:DropDownList ID="ddlEquipmentType" runat="server" Width="90%">
                                    </asp:DropDownList>
                                </div>
                                <div class="RightItem">
                                    <asp:TextBox ID="txtEquipmentType" CssClass="input" runat="server" Text="" Width="90%"
                                        onblur="selectAllItem(this.value, 5)"></asp:TextBox>
                                </div>
                            </div>
                            <br />
                            <div class="SearchItemRow">
                                <asp:Label ID="lblResource" runat="server" Text="Search By Resource"></asp:Label>
                                <div class="LeftItem">
                                    <asp:DropDownList ID="ddlResource" runat="server" Width="90%">
                                    </asp:DropDownList>
                                </div>
                                <div class="RightItem">
                                    <asp:TextBox ID="txtResource" CssClass="input" runat="server" Text="" Width="90%"
                                        onblur="selectAllItem(this.value, 6)"></asp:TextBox>
                                </div>
                            </div>
                            <br />
                            <div class="SearchItemRow">
                                <asp:Label ID="lblDateRange" runat="server" Text="Search By Date Range"></asp:Label>
                                <div class="LeftItem">
                                    <uc1:DatePicker ID="dpStartDate" runat="server" DateTimeFormat="Default" ShowOn="Both"
                                        Value="01/01/2011" IsValidEmpty="true" />
                                </div>
                                <div class="RightItem">
                                    <uc1:DatePicker ID="dpEndDate" runat="server" ValidationGroup="CallEntry" DateTimeFormat="Default"
                                        ShowOn="Both" Value="01/01/2011" IsValidEmpty="true" />
                                </div>
                            </div>
                            <br />
                            <div class="SearchButtonRow">
                                <asp:Button ID="btnSearchJob" runat="server" Text="Search" CssClass="btn" OnClick="btnSearchJob_Click"
                                    OnClientClick="return VerifyDateRange();" />
                            </div>
                        </ContentTemplate>
                    </asp:UpdatePanel>
                </div>
                <div id="TaskMenuTitle">
                    <asp:Label ID="lblTaskTitle" Text="Task Menu" runat="server"></asp:Label>
                </div>
                <div id="TaskMenu">
                    <ul id="navmenu-v" onmouseover="VerifyListPosition(this);">
                        <li><a href="#">Maintenance Function</a>
                            <ul>
                                <li id="liCity" runat="server" visible="true"><a href="#" onclick="window.open('/CityMaintenance.aspx', '', 'width=950, height=600, scrollbars=1, resizable=yes'); return false;">
                                    City Maintenance</a></li>
                                <li id="liEquipment" runat="server" visible="true"><a href="#" onclick="window.open('/EquipmentMaintenance.aspx', '', 'width=950, height=600, scrollbars=1, resizable=yes'); return false;">
                                    Equipment Maintenance</a></li>
                                <li id="liPermitting" runat="server" visible="true"><a href="#" onclick="window.open('/Permitting.aspx', '', 'width=950, height=600, scrollbars=1, resizable=yes'); return false;">
                                    Permitting Maintenance</a></li>
                                <li id="liRegion" runat="server" visible="true"><a href="#" onclick="window.open('/RegionalMaintenance.aspx', '', 'width=950, height=600, scrollbars=1, resizable=yes'); return false;">
                                    Regional Maintenance</a></li>
                                <li id="liEmployee" runat="server" visible="false"><a href="#" onclick="window.open('/EmployeeMaintenance.aspx', '', 'width=1200, height=600, scrollbars=1, resizable=yes'); return false;">
                                    Employee Profile Maintenance</a></li>
                                <li id="liCustomer" runat="server" visible="false"><a href="#" onclick="window.open('/CustomerMaintenance.aspx?ViewType=CUSTOMER', '', 'width=1200, height=600, scrollbars=1, resizable=yes'); return false;">
                                    Company Profile Maintenance</a></li>
                                <li id="liContact" runat="server" visible="false"><a href="#" onclick="window.open('/CustomerMaintenance.aspx?ViewType=CONTACT', '', 'width=1200, height=600, scrollbars=1, resizable=yes'); return false;">
                                    Contact Profile Maintenance</a></li>
                                <li id="liCustomerRequest" runat="server" visible="true"><a href="#" onclick="window.open('/CustomerRequest.aspx', '', 'width=1200, height=600, scrollbars=1, resizable=yes'); return false;">
                                    Company / Contact Request</a></li>
                                <li id="liRateTables" runat="server" visible="true"><a href="#" onclick="window.open('/RateTables.aspx', '', 'width=950, height=600, scrollbars=1, resizable=yes'); return false;">
                                    Rate Tables</a></li>
                                <li id="liSubContractor" runat="server" visible="true"><a href="#" onclick="window.open('/SubContractorMaintenance.aspx', '', 'width=950, height=600, scrollbars=1, resizable=yes'); return false;">
                                    SubContractor Maintenance</a></li>
                            </ul>
                        </li>
                        <li id="liFirstAlert" runat="server" visible="false"><a href="#" onclick="window.open('/FirstAlert.aspx', '', 'width=950, height=600, scrollbars=1, resizable=yes'); return false;">
                            First Alert</a></li>
                        <li id="liMapPlotting" runat="server"><a href="#" onclick="window.open('/mapplotting.aspx', '', 'width=950, height=600, scrollbars=1, resizable=yes'); return false;">
                            Map Plotting</a></li>
                        <li id="liDPI" runat="server" visible="true"><a href="#" onclick="window.open('/AutomatedDPI.aspx', '', 'width=1050, height=600, scrollbars=1, resizable=yes'); return false;">
                            Automated DPI</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div id="ContentPanel">
            <asp:UpdatePanel ID="upDefaultView" runat="server">
                <ContentTemplate>
                    <div id="QuickSearch" class="quicksearch">
                        <asp:Panel ID="pnlQuickSearch" style="display: inline-block; float: left; width: 50%;" runat="server"  DefaultButton="btnQuickSearch">
                            <asp:Label ID="lblQuickSearch" Text="Quick Search" runat="server"></asp:Label>
                            <asp:TextBox ID="txtQuickJobValue" runat="server" CssClass="input"></asp:TextBox>
                            <asp:Button ID="btnQuickSearch" Text="Find" runat="server" CssClass="btn" OnClick="btnQuickSearch_Click" />
                        </asp:Panel>
                        <div style="display: inline-block; width: 49%; text-align: right;">
                            <asp:Button ID="btnPrintShiftTurnover" runat="server" Text="Print Shift Transfer Report"
                                CssClass="btn" UseSubmitBehavior="false" OnClientClick="OpenShiftTurnover(); return false;" />
                        </div>
                    </div>
                </ContentTemplate>
            </asp:UpdatePanel>
            <div id="ContentPlaceHolder">
                <asp:ContentPlaceHolder ID="Content" runat="server">
                </asp:ContentPlaceHolder>
            </div>
        </div>
    </div>
    <asp:HiddenField ID="hfPermitingNotification" runat="server" Value="true" />
    <div id="jGrowlNotifications" class="jGrowl top-right">
    </div>
    <div id="notificationList" class="jGrowl bottom-right">
        <div id="notificationHeader" class="notificationHeader" onclick="ToggleNotifications()">
            Notifications</div>
        <div id="notificationMessages">
            <ul>
            </ul>
        </div>
    </div>
    <%--<script>

        function setHeightOnScreen() {
            if ($('.mainContent').css('min-height') == 'auto')
                $('.mainContent').css('min-height', $('.mainContent').css('height'));
            var headerUserOffsetHeight = $('.HeaderUser').attr('offsetHeight');
            var topMenuOffsetHeight = $('.TopMenu').attr('offsetHeight');
            var quicksearchOffsetHeight = $('.quicksearch').attr('offsetHeight');
            var documentOffsetHeight = document.body.clientHeight;
            documentOffsetHeight = documentOffsetHeight - quicksearchOffsetHeight - topMenuOffsetHeight - headerUserOffsetHeight - 20;
            
            $('.mainContent').css('height', documentOffsetHeight);
        }

        $(document).ready(function () { setHeightOnScreen(); });
        window.onresize = setHeightOnScreen;


    </script>--%>
    <script type="text/jscript" language="javascript" defer="defer">
        function VerifyDateRange() {
            if (new Date($('#<%= dpStartDate.TextBoxClientID %>').val()) > new Date($('#<%= dpEndDate.TextBoxClientID %>').val())) {
                alert("Please specify a correct date range, the first must be before the second.");
                return false;
            }
            return true;
        }

        function selectAllItem(textBoxValue, dropdown) {
            var dropdownClientId = "";
            if (dropdown == 1)
                dropdownClientId = '<%=ddlContactInfo.ClientID %>';
            else if (dropdown == 2)
                dropdownClientId = '<%=ddlJobInfo.ClientID %>';
            else if (dropdown == 3)
                dropdownClientId = '<%=ddlLocationInfo.ClientID %>';
            else if (dropdown == 4)
                dropdownClientId = '<%=ddlJobDescription.ClientID %>';
            else if (dropdown == 5)
                dropdownClientId = '<%=ddlEquipmentType.ClientID %>';
            else if (dropdown == 6)
                dropdownClientId = '<%=ddlResource.ClientID %>';
            if (textBoxValue != "" && ($('#' + dropdownClientId).val() == "" || $('#' + dropdownClientId).val() == "None"))
                $('#' + dropdownClientId).val("All");
        }

        function VerifyListPosition(obj) {
            //debugger;
            var items = $('#navmenu-v ul li');
            var height = (items.length * 30 + (items.length + 1) * 1);
            var bottom = obj.parentElement.parentElement.offsetTop + obj.parentElement.offsetTop + obj.offsetTop + height; ;

            if (bottom > document.body.clientHeight) {
                var difference = bottom - document.body.clientHeight;
                $('#navmenu-v ul')[0].style.top = difference * -1;
            }
            else
                $('#navmenu-v ul')[0].style.top = 0;
        }

        $(document).ready(function () {
            $.jGrowl.defaults.closer = false;
            GetNotifications();
        });

        var displayedNotifications = new Array();
        var removedNotifications = new Array();
        var presetNotification = "preset";
        var presetMessage = "The Preset Date of the job <a href='#' onclick='OpenJobRecord({jobId})'>{jobNumber}</a> has come overdue ({presetDate})";
        var presetHeader = "Important - Preset Job";
        var equipmentComboNotification = "equipmentcombo";
        var equipmentComboMessage = "The Equipment Combo <a href='#' onclick='OpenEquipmentCombo({comboId})'>{comboName}</a> has a conflict, some equipments have diferent divisions";
        var equipmentComboHeader = "Important - Equipment Combo";
        var equipmentPermitNotification = "equipmentpermit";
        var equipmentPermitMessage = "The Equipment Permit {permitNumber} for the equipment {equipmentName} has come overdue ({expirationDate})";
        var equipmentPermitHeader = "Important - Equipment Permit";
        var offCallNotification = "offcall";
        var offCallMessage = "The Off Call for Employee <a href='#' onclick='OpenEmployeeMaintenance({employeeId})'>{employeeName}</a> has come overdue ({offCallDate})";
        var offCallHeader = "Important - Employee Off Call";
        var needsToBlink = false;
        var alreadyBlinking = false;

        function GetNotifications() {

            try {
                // call webserice to get notifications
                tempuri.org.IJSONService.GetPresetNotificationList(GetPresetNotificationListCompleted, GetNotificationListError);
                tempuri.org.IJSONService.GetOffCallNotificationList(GetOffCallNotificationListCompleted, GetNotificationListError);

                if (document.getElementById('<%= hfPermitingNotification.ClientID %>').value == "true") {
                    tempuri.org.IJSONService.GetEquipmentComboNotificationList(GetEquipmentComboNotificationListCompleted, GetNotificationListError);
                    //tempuri.org.IJSONService.GetEquipmentPermitNotificationList(GetEquipmentPermitNotificationListCompleted, GetNotificationListError);
                }
            }
            catch (e) { }

            // resets the setTimeout
            setTimeout(GetNotifications, 15000);
        }

        function GetNotificationListError(result, userContext, methodName) {
            // do nothing
        }

        function GetPresetNotificationListCompleted(result) {
            var currentDate = new Date();
            if (result) {
                for (var i = 0; i < result.length; i++) {

                    var needsToDisplay = false;
                    var currentPosition = -1;

                    for (j = 0; j < displayedNotifications.length; j++) {
                        var notificationDetails = displayedNotifications[j].split(';');
                        var type = notificationDetails[3];

                        if (type == presetNotification) {

                            var jobId = parseInt(notificationDetails[0]);
                            var displayedDate = new Date(notificationDetails[1]);
                            var isOpened = notificationDetails[2];

                            if (jobId == result[i].JobId) {
                                currentPosition = j;
                                if (isOpened == "false") {
                                    var lastTimeDisplayed = currentDate - displayedDate;
                                    lastTimeDisplayed = lastTimeDisplayed / 60000; // converting milliseconds to minutes

                                    if (lastTimeDisplayed > 30) {
                                        needsToDisplay = true;
                                        break;
                                    }
                                }
                                else {
                                    // updates the displayed date with the current date
                                    displayedNotifications[currentPosition] = result[i].JobId + ";" + currentDate + ";true;" + presetNotification;
                                }
                            }
                        }
                    }

                    if (!needsToDisplay && currentPosition == -1)
                        needsToDisplay = true;

                    if (needsToDisplay) {

                        if (currentPosition != -1)
                            displayedNotifications[currentPosition] = result[i].JobId + ";" + currentDate + ";true;" + presetNotification;
                        else {
                            needsToBlink = true;
                            displayedNotifications.push(result[i].JobId + ";" + currentDate + ";true;" + presetNotification);
                            $('#notificationMessages ul').append('<li class="' + presetNotification + ' ' + result[i].JobId + '">At ' + FormatDate(currentDate) + '<br />' +
                                                                presetMessage.replace("{jobId}", result[i].JobId)
                                                                             .replace("{jobNumber}", result[i].JobNumber)
                                                                             .replace("{presetDate}", result[i].PresetDate) +
                                                              '</li>');

                            currentPosition = displayedNotifications.length - 1;
                        }

                        $('#jGrowlNotifications').jGrowl(
                        presetMessage
                            .replace("{jobId}", result[i].JobId)
                            .replace("{jobNumber}", result[i].JobNumber)
                            .replace("{presetDate}", result[i].PresetDate),
                        {
                            header: presetHeader,
                            sticky: true,
                            notificationIndex: currentPosition,
                            group: result[i].JobId,
                            close: function (e, m, o) {

                                for (var currentIndex = 0; currentIndex < displayedNotifications.length; currentIndex++) {
                                    var notificationDetails = displayedNotifications[currentIndex].split(';');

                                    if (notificationDetails[0] == o.group && notificationDetails[3] == presetNotification) {
                                        displayedNotifications[currentIndex] = displayedNotifications[currentIndex].replace(";true", ";false");
                                        break;
                                    }
                                }

                            }
                        });
                    }
                }

                var removedExists = false;
                for (var i = displayedNotifications.length - 1; i >= 0; i--) {
                    var notificationDetails = displayedNotifications[i].split(';');
                    var exists = false;
                    var type = notificationDetails[3];

                    if (type == presetNotification) {
                        for (j = 0; j < result.length; j++) {
                            if (notificationDetails[0] == result[j].JobId) {
                                exists = true;
                                break;
                            }
                        }

                        if (!exists) {
                            $('#jGrowlNotifications').find('.' + notificationDetails[0]).trigger('jGrowl.close');
                            removedNotifications.push(presetNotification + ";" + notificationDetails[0]);
                            removedExists = true;
                        }
                    }
                }

                if (removedExists)
                    setTimeout(function () { RemoveMessage() }, 1000);

                $('#notificationHeader').html("Notifications (" + $('#notificationMessages li').length + ")");

                if (needsToBlink && !alreadyBlinking) {
                    BlinkNotification();
                    needsToBlink = false;
                }
            }
        }

        function GetEquipmentComboNotificationListCompleted(result) {
            var currentDate = new Date();

            if (result) {
                for (var i = 0; i < result.length; i++) {

                    var needsToDisplay = false;
                    var currentPosition = -1;

                    for (j = 0; j < displayedNotifications.length; j++) {

                        var notificationDetails = displayedNotifications[j].split(';');
                        var type = notificationDetails[3];

                        if (type == equipmentComboNotification) {

                            var comboId = parseInt(notificationDetails[0]);
                            var displayedDate = new Date(notificationDetails[1]);
                            var isOpened = notificationDetails[2];

                            if (comboId == result[i].ComboId) {
                                currentPosition = j;
                                if (isOpened == "false") {
                                    var lastTimeDisplayed = currentDate - displayedDate;
                                    lastTimeDisplayed = lastTimeDisplayed / 60000; // converting milliseconds to minutes

                                    if (lastTimeDisplayed > 30) {
                                        needsToDisplay = true;
                                        break;
                                    }
                                }
                                else {
                                    // updates the displayed date with the current date
                                    displayedNotifications[currentPosition] = result[i].ComboId + ";" + currentDate + ";true;" + equipmentComboNotification;
                                }
                            }
                        }
                    }

                    if (!needsToDisplay && currentPosition == -1)
                        needsToDisplay = true;

                    if (needsToDisplay) {

                        if (currentPosition != -1)
                            displayedNotifications[currentPosition] = result[i].ComboId + ";" + currentDate + ";true;" + equipmentComboNotification;
                        else {
                            needsToBlink = true;
                            displayedNotifications.push(result[i].ComboId + ";" + currentDate + ";true;" + equipmentComboNotification);
                            $('#notificationMessages ul').append('<li class="' + equipmentComboNotification + ' ' + result[i].ComboId + '">At ' + FormatDate(currentDate) + '<br />' +
                                                                equipmentComboMessage.replace("{comboId}", result[i].ComboId)
                                                                             .replace("{comboName}", result[i].ComboName) +
                                                              '</li>');

                            currentPosition = displayedNotifications.length - 1;
                        }

                        $('#jGrowlNotifications').jGrowl(
                        equipmentComboMessage
                            .replace("{comboId}", result[i].ComboId)
                            .replace("{comboName}", result[i].ComboName),
                        {
                            header: equipmentComboHeader,
                            sticky: true,
                            notificationIndex: currentPosition,
                            group: result[i].ComboId,
                            close: function (e, m, o) {

                                for (var currentIndex = 0; currentIndex < displayedNotifications.length; currentIndex++) {
                                    var notificationDetails = displayedNotifications[currentIndex].split(';');

                                    if (notificationDetails[0] == o.group && notificationDetails[3] == equipmentComboNotification) {
                                        displayedNotifications[currentIndex] = displayedNotifications[currentIndex].replace(";true", ";false");
                                        break;
                                    }
                                }

                            }
                        });
                    }
                }

                var removedExists = false;
                for (var i = displayedNotifications.length - 1; i >= 0; i--) {
                    var notificationDetails = displayedNotifications[i].split(';');
                    var exists = false;
                    var type = notificationDetails[3];

                    if (type == equipmentComboNotification) {

                        for (j = 0; j < result.length; j++) {
                            if (notificationDetails[0] == result[j].ComboId) {
                                exists = true;
                                break;
                            }
                        }

                        if (!exists) {
                            $('#jGrowlNotifications').find('.' + notificationDetails[0]).trigger('jGrowl.close');
                            removedNotifications.push(equipmentComboNotification + ";" + notificationDetails[0]);
                            removedExists = true;
                        }
                    }
                }

                if (removedExists)
                    setTimeout(function () { RemoveMessage() }, 1000);

                $('#notificationHeader').html("Notifications (" + $('#notificationMessages li').length + ")");

                if (needsToBlink && !alreadyBlinking) {
                    BlinkNotification();
                    needsToBlink = false;
                }
            }
        }

        function GetEquipmentPermitNotificationListCompleted(result) {
            var currentDate = new Date();

            if (result) {
                for (var i = 0; i < result.length; i++) {

                    var needsToDisplay = false;
                    var currentPosition = -1;

                    for (j = 0; j < displayedNotifications.length; j++) {

                        var notificationDetails = displayedNotifications[j].split(';');
                        var type = notificationDetails[3];

                        if (type == equipmentPermitNotification) {

                            var permitId = parseInt(notificationDetails[0]);
                            var displayedDate = new Date(notificationDetails[1]);
                            var isOpened = notificationDetails[2];

                            if (permitId == result[i].PermitId) {
                                currentPosition = j;
                                if (isOpened == "false") {
                                    var lastTimeDisplayed = currentDate - displayedDate;
                                    lastTimeDisplayed = lastTimeDisplayed / 60000; // converting milliseconds to minutes

                                    if (lastTimeDisplayed > 30) {
                                        needsToDisplay = true;
                                        break;
                                    }
                                }
                                else {
                                    // updates the displayed date with the current date
                                    displayedNotifications[currentPosition] = result[i].PermitId + ";" + currentDate + ";true;" + equipmentPermitNotification;
                                }
                            }
                        }
                    }

                    if (!needsToDisplay && currentPosition == -1)
                        needsToDisplay = true;

                    if (needsToDisplay) {

                        if (currentPosition != -1)
                            displayedNotifications[currentPosition] = result[i].PermitId + ";" + currentDate + ";true;" + equipmentPermitNotification;
                        else {
                            needsToBlink = true;
                            displayedNotifications.push(result[i].PermitId + ";" + currentDate + ";true;" + equipmentPermitNotification);
                            $('#notificationMessages ul').append('<li class="' + equipmentPermitNotification + ' ' + result[i].PermitNumber + '">At ' + FormatDate(currentDate) + '<br />' +
                                                                presetMessage.replace("{permitNumber}", result[i].PermitNumber)
                                                                             .replace("{equipmentName}", result[i].EquipmentName)
                                                                             .replace("{expirationDate}", result[i].ExpirationDate) +
                                                              '</li>');

                            currentPosition = displayedNotifications.length - 1;
                        }

                        $('#jGrowlNotifications').jGrowl(
                        equipmentPermitMessage
                            .replace("{permitNumber}", result[i].PermitNumber)
                            .replace("{equipmentName}", result[i].EquipmentName)
                            .replace("{expirationDate}", result[i].ExpirationDate),
                        {
                            header: equipmentPermitHeader,
                            sticky: true,
                            notificationIndex: currentPosition,
                            group: result[i].PermitId,
                            close: function (e, m, o) {

                                for (var currentIndex = 0; currentIndex < displayedNotifications.length; currentIndex++) {
                                    var notificationDetails = displayedNotifications[currentIndex].split(';');

                                    if (notificationDetails[0] == o.group && notificationDetails[3] == equipmentPermitNotification) {
                                        displayedNotifications[currentIndex] = displayedNotifications[currentIndex].replace(";true", ";false");
                                        break;
                                    }
                                }

                            }
                        });
                    }
                }
                var removedExists = false;
                for (var i = displayedNotifications.length - 1; i >= 0; i--) {
                    var notificationDetails = displayedNotifications[i].split(';');
                    var exists = false;
                    var type = notificationDetails[3];

                    if (type == equipmentPermitNotification) {

                        for (j = 0; j < result.length; j++) {
                            if (notificationDetails[0] == result[j].PermitId) {
                                exists = true;
                                break;
                            }
                        }

                        if (!exists) {
                            $('#jGrowlNotifications').find('.' + notificationDetails[0]).trigger('jGrowl.close');
                            removedNotifications.push(equipmentPermitNotification + ";" + notificationDetails[0]);
                            removedExists = true;
                        }
                    }
                }

                if (removedExists)
                    setTimeout(function () { RemoveMessage() }, 1000);

                $('#notificationHeader').html("Notifications (" + $('#notificationMessages li').length + ")");

                if (needsToBlink && !alreadyBlinking) {
                    BlinkNotification();
                    needsToBlink = false;
                }
            }
        }


        function GetOffCallNotificationListCompleted(result) {
            var currentDate = new Date();

            if (result) {
                for (var i = 0; i < result.length; i++) {

                    var needsToDisplay = false;
                    var currentPosition = -1;

                    for (j = 0; j < displayedNotifications.length; j++) {

                        var notificationDetails = displayedNotifications[j].split(';');
                        var type = notificationDetails[3];

                        if (type == offCallNotification) {

                            var employeeId = parseInt(notificationDetails[0]);
                            var displayedDate = new Date(notificationDetails[1]);
                            var isOpened = notificationDetails[2];

                            if (employeeId == result[i].EmployeeId) {
                                currentPosition = j;
                                if (isOpened == "false") {
                                    var lastTimeDisplayed = currentDate - displayedDate;
                                    lastTimeDisplayed = lastTimeDisplayed / 60000; // converting milliseconds to minutes

                                    if (lastTimeDisplayed > 30) {
                                        needsToDisplay = true;
                                        break;
                                    }
                                }
                                else {
                                    // updates the displayed date with the current date
                                    displayedNotifications[currentPosition] = result[i].EmployeeId + ";" + currentDate + ";true;" + offCallNotification;
                                }
                            }
                        }
                    }

                    if (!needsToDisplay && currentPosition == -1)
                        needsToDisplay = true;

                    if (needsToDisplay) {

                        if (currentPosition != -1)
                            displayedNotifications[currentPosition] = result[i].EmployeeId + ";" + currentDate + ";true;" + offCallNotification;
                        else {
                            needsToBlink = true;
                            displayedNotifications.push(result[i].EmployeeId + ";" + currentDate + ";true;" + offCallNotification);
                            $('#notificationMessages ul').append('<li class="' + offCallNotification + ' ' + result[i].EmployeeId + '">At ' + FormatDate(currentDate) + '<br />' +
                                                                offCallMessage.replace("{employeeId}", result[i].EmployeeId)
                                                                             .replace("{employeeName}", result[i].EmployeeName)
                                                                             .replace("{offCallDate}", result[i].OffCallDate) +
                                                              '</li>');

                            currentPosition = displayedNotifications.length - 1;
                        }

                        $('#jGrowlNotifications').jGrowl(
                        offCallMessage
                            .replace("{employeeId}", result[i].EmployeeId)
                            .replace("{employeeName}", result[i].EmployeeName)
                            .replace("{offCallDate}", result[i].OffCallDate),
                        {
                            header: offCallHeader,
                            sticky: true,
                            notificationIndex: currentPosition,
                            group: result[i].EmployeeId,
                            close: function (e, m, o) {

                                for (var currentIndex = 0; currentIndex < displayedNotifications.length; currentIndex++) {
                                    var notificationDetails = displayedNotifications[currentIndex].split(';');

                                    if (notificationDetails[0] == o.group && notificationDetails[3] == offCallNotification) {
                                        displayedNotifications[currentIndex] = displayedNotifications[currentIndex].replace(";true", ";false");
                                        break;
                                    }
                                }

                            }
                        });
                    }
                }

                var removedExists = false;
                for (var i = displayedNotifications.length - 1; i >= 0; i--) {
                    var notificationDetails = displayedNotifications[i].split(';');
                    var exists = false;
                    var type = notificationDetails[3];

                    if (type == offCallNotification) {

                        for (j = 0; j < result.length; j++) {
                            if (notificationDetails[0] == result[j].EmployeeId) {
                                exists = true;
                                break;
                            }
                        }

                        if (!exists) {
                            $('#jGrowlNotifications').find('.' + notificationDetails[0]).trigger('jGrowl.close');
                            removedNotifications.push(offCallNotification + ";" + notificationDetails[0]);
                            removedExists = true;
                        }
                    }
                }

                if (removedExists)
                    setTimeout(function () { RemoveMessage() }, 1000);

                $('#notificationHeader').html("Notifications (" + $('#notificationMessages li').length + ")");

                if (needsToBlink && !alreadyBlinking) {
                    BlinkNotification();
                    needsToBlink = false;
                }
            }
        }

        function RemoveMessage() {
            var i = 0;
            var times = removedNotifications.length;

            while (i < times) {

                var removedDetails = removedNotifications[0].split(';');

                var notificationType = removedDetails[0];
                var notificationIdentifyer = removedDetails[1];

                for (var currentIndex = 0; currentIndex < displayedNotifications.length; currentIndex++) {
                    var notificationDetails = displayedNotifications[currentIndex].split(';');

                    if (notificationDetails[0] == notificationIdentifyer && notificationDetails[3] == notificationType) {
                        displayedNotifications.splice(currentIndex, 1);
                        $('#notificationMessages .' + notificationType + '.' + notificationIdentifyer).remove();
                        $('#notificationHeader').html("Notifications (" + $('#notificationMessages li').length + ")");
                        break;
                    }
                }

                removedNotifications.splice(0, 1);
                i++;
            }
        }

        var blinkTimeoutId = -1;
        function BlinkNotification() {
            $('#notificationHeader').toggleClass('notificationHeaderBlink');
            blinkTimeoutId = setTimeout(BlinkNotification, 500);
        }

        function ToggleNotifications() {
            $('#notificationMessages').toggle();

            if (blinkTimeoutId != -1) {
                $('#notificationHeader').removeClass('notificationHeaderBlink');
                clearTimeout(blinkTimeoutId);
                blinkTimeoutId = -1;
            }
        }

        function FormatDate(d) {
            var curr_date = d.getDate();
            curr_date = curr_date + "";
            if (curr_date.length == 1) curr_date = "0" + curr_date;
            var curr_month = d.getMonth();
            curr_month++;
            curr_month = curr_month + "";
            if (curr_month.length == 1) curr_month = "0" + curr_month;
            var curr_year = d.getFullYear();
            var curr_hour = d.getHours();
            curr_hour = curr_hour + "";
            if (curr_hour.length == 1) curr_hour = "0" + curr_hour;
            var curr_minute = d.getMinutes();
            curr_minute = curr_minute + "";
            if (curr_minute.length == 1) curr_minute = "0" + curr_minute;
            return curr_month + "/" + curr_date + "/" + curr_year + " " + curr_hour + ":" + curr_minute;
        }

        function OpenJobRecord(jobId) {
            var newWindow = window.open('/JobRecord.aspx?JobId=' + jobId, '', 'width=870, height=600, scrollbars=1, resizable=yes');
        }

        function OpenEquipmentCombo(comboId) {
            var newWindow = window.open('/Permitting.aspx?ComboId=' + comboId, '', 'width=1100, height=600, scrollbars=1, resizable=yes');
        }


        function OpenEmployeeMaintenance(employeeId) {
            var newWindow = window.open('/EmployeeMaintenance.aspx?EmployeeID=' + employeeId, '', 'width=1200, height=600, scrollbars=1, resizable=yes');
        }

        function OpenShiftTurnover() {
            var newWindow = window.open('/ShiftTurnOverReport.aspx', '', 'width=1040, height=600, scrollbars=1, resizable=yes');
        }

        $(document).ready(function () {
            $("#panel").toggle();
            $("#ContentPanel").css("margin-left", "40px");
            $("#LeftPanelToggle").css("display", "block");

            $("#close").click(function () {
                $("#panel").toggle();
                $("#ContentPanel").css("margin-left", "40px");
                $("#LeftPanelToggle").css("display", "block");
            });

            $("#open").click(function () {
                $("#panel").toggle();
                $("#ContentPanel").css("margin-left", "265px");
                $("#LeftPanelToggle").css("display", "none");
            });
        });
    </script>
</asp:Content>
