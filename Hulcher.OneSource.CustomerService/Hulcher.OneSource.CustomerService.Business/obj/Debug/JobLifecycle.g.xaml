<?xml version="1.0" encoding="utf-8"?>
<hocbw:JobLifecycle mva:VisualBasic.Settings="Assembly references and imported namespaces for internal implementation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:hocbw="clr-namespace:Hulcher.OneSource.CustomerService.Business.Workflows;assembly=Hulcher.OneSource.CustomerService.Business" xmlns:hocc="clr-namespace:Hulcher.OneSource.CustomerService.Core;assembly=Hulcher.OneSource.CustomerService.Core" xmlns:hocd="clr-namespace:Hulcher.OneSource.CustomerService.DataContext;assembly=Hulcher.OneSource.CustomerService.DataContext" xmlns:local="clr-namespace:Hulcher.OneSource.CustomerService.Business.Model;assembly=Hulcher.OneSource.CustomerService.Business" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System" xmlns:s2="clr-namespace:System;assembly=System.Xml" xmlns:s3="clr-namespace:System;assembly=System.Core" xmlns:s4="clr-namespace:System;assembly=System.ServiceModel" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sdod="clr-namespace:System.Data.Objects.DataClasses;assembly=System.Data.Entity" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <hocbw:JobLifecycle.Implementation>
    <Flowchart sad:XamlDebuggerXmlReader.FileName="C:\Projetos\Hulcher\CustomerService\Hulcher.OneSource.CustomerService\Hulcher.OneSource.CustomerService.Business\Workflows\JobLifecycle.xaml">
      <Flowchart.StartNode>
        <FlowDecision x:Name="__ReferenceID35" Condition="[oldStatusId &lt;&gt; updateStatusId]">
          <FlowDecision.True>
            <FlowSwitch x:TypeArguments="x:Int32" x:Name="__ReferenceID32" Expression="[updateStatusId]">
              <FlowSwitch.Default>
                <FlowStep x:Name="__ReferenceID45">
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Flow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID38" Condition="[oldStatusId = 1]">
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID39">
                          <Flowchart DisplayName="FromActiveFlowchart">
                            <Flowchart.StartNode>
                              <FlowStep x:Name="__ReferenceID0">
                                <InvokeMethod MethodName="HasAssignedResources">
                                  <InvokeMethod.Result>
                                    <OutArgument x:TypeArguments="x:Boolean">[HasAssignedResources]</OutArgument>
                                  </InvokeMethod.Result>
                                  <InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="local:JobModel">[New Hulcher.OneSource.CustomerService.Business.Model.JobModel]</InArgument>
                                  </InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="x:Int32">[oldJob.ID]</InArgument>
                                </InvokeMethod>
                                <FlowStep.Next>
                                  <FlowDecision x:Name="__ReferenceID2" Condition="[HasAssignedResources = True]">
                                    <FlowDecision.True>
                                      <FlowStep x:Name="__ReferenceID1">
                                        <Assign>
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Cannot update Job Status, there are Resources Assigned</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </FlowStep>
                                    </FlowDecision.True>
                                  </FlowDecision>
                                </FlowStep.Next>
                              </FlowStep>
                            </Flowchart.StartNode>
                            <x:Reference>__ReferenceID0</x:Reference>
                            <x:Reference>__ReferenceID1</x:Reference>
                            <x:Reference>__ReferenceID2</x:Reference>
                          </Flowchart>
                        </FlowStep>
                      </FlowDecision.True>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
              </FlowSwitch.Default>
              <FlowStep x:Key="6" x:Name="__ReferenceID34">
                <Flowchart DisplayName="ToClosedFlowchart">
                  <Flowchart.StartNode>
                    <FlowStep x:Name="__ReferenceID5">
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Flow]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Closed</InArgument>
                        </Assign.Value>
                      </Assign>
                      <FlowStep.Next>
                        <FlowDecision x:Name="__ReferenceID13" Condition="[oldStatusId = 2]">
                          <FlowDecision.True>
                            <FlowStep x:Name="__ReferenceID14">
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Cannot update Job Status to Closed, because the previous status is Preset.</InArgument>
                                </Assign.Value>
                              </Assign>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID3">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Flow]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Not Allowed</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowDecision.True>
                          <FlowDecision.False>
                            <FlowDecision x:Name="__ReferenceID16" Condition="[oldStatusId = 3]">
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID15">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Cannot update Job Status to Closed, because the previous status is Potential.</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <x:Reference>__ReferenceID3</x:Reference>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID8">
                                  <InvokeMethod DisplayName="Verify Resources" MethodName="HasResource">
                                    <InvokeMethod.Result>
                                      <OutArgument x:TypeArguments="x:Boolean">[HasResources]</OutArgument>
                                    </InvokeMethod.Result>
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="local:ResourceAllocationModel">[New Hulcher.OneSource.CustomerService.Business.Model.ResourceAllocationModel]</InArgument>
                                    </InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="x:Int32">[oldJob.ID]</InArgument>
                                  </InvokeMethod>
                                  <FlowStep.Next>
                                    <FlowDecision x:Name="__ReferenceID9" Condition="[HasResources]">
                                      <FlowDecision.True>
                                        <FlowStep x:Name="__ReferenceID10">
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Cannot update Job Status, there are Resources Assigned</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </FlowStep>
                                      </FlowDecision.True>
                                      <FlowDecision.False>
                                        <FlowStep x:Name="__ReferenceID6">
                                          <InvokeMethod DisplayName="Clear Reserves" MethodName="ClearReservesByJobId">
                                            <InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="local:ResourceAllocationModel">[New Hulcher.OneSource.CustomerService.Business.Model.ResourceAllocationModel]</InArgument>
                                            </InvokeMethod.TargetObject>
                                            <InArgument x:TypeArguments="x:Int32">[oldJob.ID]</InArgument>
                                            <InArgument x:TypeArguments="x:String">[Username]</InArgument>
                                          </InvokeMethod>
                                          <FlowStep.Next>
                                            <FlowSwitch x:TypeArguments="x:Int32" x:Name="__ReferenceID7" Expression="[oldStatusId]">
                                              <FlowStep x:Key="1" x:Name="__ReferenceID4">
                                                <InvokeMethod DisplayName="Verify Temporary CustomerId" MethodName="HasTemporaryCustomerID">
                                                  <InvokeMethod.Result>
                                                    <OutArgument x:TypeArguments="x:Boolean">[HasTemporaryCustomer]</OutArgument>
                                                  </InvokeMethod.Result>
                                                  <InvokeMethod.TargetObject>
                                                    <InArgument x:TypeArguments="local:CustomerModel">[New Hulcher.OneSource.CustomerService.Business.Model.CustomerModel]</InArgument>
                                                  </InvokeMethod.TargetObject>
                                                  <InArgument x:TypeArguments="x:Int32">[customerId]</InArgument>
                                                </InvokeMethod>
                                                <FlowStep.Next>
                                                  <FlowDecision x:Name="__ReferenceID11" Condition="[HasTemporaryCustomer = True]">
                                                    <FlowDecision.True>
                                                      <FlowStep x:Name="__ReferenceID12">
                                                        <Assign>
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">Job can not be closed with a temporary company ID. Job has been set to Closed-Hold</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </FlowStep>
                                                    </FlowDecision.True>
                                                  </FlowDecision>
                                                </FlowStep.Next>
                                              </FlowStep>
                                              <x:Reference>__ReferenceID4<x:Key>8</x:Key></x:Reference>
                                            </FlowSwitch>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowDecision.False>
                                    </FlowDecision>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowDecision.False>
                        </FlowDecision>
                      </FlowStep.Next>
                    </FlowStep>
                  </Flowchart.StartNode>
                  <x:Reference>__ReferenceID5</x:Reference>
                  <x:Reference>__ReferenceID6</x:Reference>
                  <x:Reference>__ReferenceID7</x:Reference>
                  <x:Reference>__ReferenceID4</x:Reference>
                  <x:Reference>__ReferenceID8</x:Reference>
                  <x:Reference>__ReferenceID9</x:Reference>
                  <x:Reference>__ReferenceID10</x:Reference>
                  <x:Reference>__ReferenceID11</x:Reference>
                  <x:Reference>__ReferenceID12</x:Reference>
                  <x:Reference>__ReferenceID13</x:Reference>
                  <x:Reference>__ReferenceID3</x:Reference>
                  <FlowStep>
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Cannot update Job Status to Closed, because the previous status is Preset.</InArgument>
                      </Assign.Value>
                    </Assign>
                  </FlowStep>
                  <x:Reference>__ReferenceID14</x:Reference>
                  <x:Reference>__ReferenceID15</x:Reference>
                  <x:Reference>__ReferenceID16</x:Reference>
                </Flowchart>
              </FlowStep>
              <FlowStep x:Key="1" x:Name="__ReferenceID33">
                <Flowchart DisplayName="ToActiveFlowchart">
                  <Flowchart.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="WasBillable" />
                  </Flowchart.Variables>
                  <Flowchart.StartNode>
                    <FlowStep x:Name="__ReferenceID19">
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Flow]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Active</InArgument>
                        </Assign.Value>
                      </Assign>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID23">
                          <InvokeMethod MethodName="WasPreviouslyBillable">
                            <InvokeMethod.Result>
                              <OutArgument x:TypeArguments="x:Boolean">[WasBillable]</OutArgument>
                            </InvokeMethod.Result>
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="local:JobModel">[New Hulcher.OneSource.CustomerService.Business.Model.JobModel]</InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="x:Int32">[oldJob.ID]</InArgument>
                          </InvokeMethod>
                          <FlowStep.Next>
                            <FlowDecision x:Name="__ReferenceID24" Condition="[WasBillable = True]">
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID22">
                                  <InvokeMethod DisplayName="Email Invoicing" MethodName="SendNotificationForInvoicingTeam">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="local:JobModel">[New Hulcher.OneSource.CustomerService.Business.Model.JobModel]</InArgument>
                                    </InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="x:Int32">[oldJob.ID]</InArgument>
                                  </InvokeMethod>
                                  <FlowStep.Next>
                                    <FlowSwitch x:TypeArguments="x:Int32" x:Name="__ReferenceID18" Expression="[oldStatusId]">
                                      <FlowStep x:Key="5" x:Name="__ReferenceID17">
                                        <Assign>
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[AssignJobNumber]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID20">
                                            <InvokeMethod DisplayName="Verify Resources" MethodName="HasReservedResources">
                                              <InvokeMethod.Result>
                                                <OutArgument x:TypeArguments="x:Boolean">[ResourceConversion]</OutArgument>
                                              </InvokeMethod.Result>
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="local:JobModel">[New Hulcher.OneSource.CustomerService.Business.Model.JobModel]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:Int32">[oldJob.ID]</InArgument>
                                            </InvokeMethod>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                      <x:Reference>__ReferenceID17<x:Key>4</x:Key></x:Reference>
                                      <x:Reference>__ReferenceID17<x:Key>3</x:Key></x:Reference>
                                      <x:Reference>__ReferenceID17<x:Key>2</x:Key></x:Reference>
                                      <FlowStep x:Key="7" x:Name="__ReferenceID21">
                                        <InvokeMethod DisplayName="Email Estimating" MethodName="SendNotificationForEstimationTeam">
                                          <InvokeMethod.TargetObject>
                                            <InArgument x:TypeArguments="local:JobModel">[New Hulcher.OneSource.CustomerService.Business.Model.JobModel]</InArgument>
                                          </InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="x:Int32">[oldJob.ID]</InArgument>
                                        </InvokeMethod>
                                        <FlowStep.Next>
                                          <x:Reference>__ReferenceID17</x:Reference>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowSwitch>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <x:Reference>__ReferenceID18</x:Reference>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </Flowchart.StartNode>
                  <x:Reference>__ReferenceID19</x:Reference>
                  <x:Reference>__ReferenceID18</x:Reference>
                  <x:Reference>__ReferenceID17</x:Reference>
                  <x:Reference>__ReferenceID20</x:Reference>
                  <x:Reference>__ReferenceID21</x:Reference>
                  <x:Reference>__ReferenceID22</x:Reference>
                  <x:Reference>__ReferenceID23</x:Reference>
                  <x:Reference>__ReferenceID24</x:Reference>
                </Flowchart>
              </FlowStep>
              <FlowDecision x:Key="3" x:Name="__ReferenceID25" Condition="[oldStatusId = 6]">
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID46">
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Flow]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Not Allowed</InArgument>
                      </Assign.Value>
                    </Assign>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID47">
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Cannot update Job Status to {0}, because the previous status is Closed.</InArgument>
                          </Assign.Value>
                        </Assign>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
                <FlowDecision.False>
                  <FlowDecision x:Name="__ReferenceID48" Condition="[oldStatusId = 1]">
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID40">
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Flow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Not Allowed</InArgument>
                          </Assign.Value>
                        </Assign>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID41">
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Cannot update Job Status to {0}, because the previous status is Active."]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID49">
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Flow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowDecision.False>
              </FlowDecision>
              <FlowDecision x:Key="2" x:Name="__ReferenceID42" Condition="[oldStatusId = 8]">
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID43">
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Flow]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Not Allowed</InArgument>
                      </Assign.Value>
                    </Assign>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID44">
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Cannot update Job Status to {0}, because the previous status is Preset-Purchase.</InArgument>
                          </Assign.Value>
                        </Assign>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
                <FlowDecision.False>
                  <x:Reference>__ReferenceID25</x:Reference>
                </FlowDecision.False>
              </FlowDecision>
              <x:Reference>__ReferenceID25<x:Key>8</x:Key></x:Reference>
              <FlowStep x:Key="4" x:Name="__ReferenceID31">
                <Flowchart DisplayName="ToCancelledOrLostFlowchart">
                  <Flowchart.StartNode>
                    <FlowStep x:Name="__ReferenceID26">
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Flow]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Cancelled/Lost</InArgument>
                        </Assign.Value>
                      </Assign>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID28">
                          <InvokeMethod DisplayName="Verify Resources" MethodName="HasResource">
                            <InvokeMethod.Result>
                              <OutArgument x:TypeArguments="x:Boolean">[HasResources]</OutArgument>
                            </InvokeMethod.Result>
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="local:ResourceAllocationModel">[New Hulcher.OneSource.CustomerService.Business.Model.ResourceAllocationModel]</InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="x:Int32">[oldJob.ID]</InArgument>
                          </InvokeMethod>
                          <FlowStep.Next>
                            <FlowDecision x:Name="__ReferenceID29" Condition="[HasResources]">
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID30">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Cannot update Job Status, there are Resources Assigned</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID27">
                                  <InvokeMethod DisplayName="Clear Reserves" MethodName="ClearReservesByJobId">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="local:ResourceAllocationModel">[New Hulcher.OneSource.CustomerService.Business.Model.ResourceAllocationModel]</InArgument>
                                    </InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="x:Int32">[oldJob.ID]</InArgument>
                                    <InArgument x:TypeArguments="x:String">[Username]</InArgument>
                                  </InvokeMethod>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </Flowchart.StartNode>
                  <x:Reference>__ReferenceID26</x:Reference>
                  <x:Reference>__ReferenceID27</x:Reference>
                  <x:Reference>__ReferenceID28</x:Reference>
                  <x:Reference>__ReferenceID29</x:Reference>
                  <x:Reference>__ReferenceID30</x:Reference>
                </Flowchart>
              </FlowStep>
              <x:Reference>__ReferenceID31<x:Key>5</x:Key></x:Reference>
            </FlowSwitch>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID36">
              <Assign>
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Message]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">No Status Change</InArgument>
                </Assign.Value>
              </Assign>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID37">
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Flow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">None</InArgument>
                    </Assign.Value>
                  </Assign>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID32</x:Reference>
      <x:Reference>__ReferenceID33</x:Reference>
      <x:Reference>__ReferenceID34</x:Reference>
      <x:Reference>__ReferenceID31</x:Reference>
      <x:Reference>__ReferenceID35</x:Reference>
      <x:Reference>__ReferenceID36</x:Reference>
      <x:Reference>__ReferenceID37</x:Reference>
      <x:Reference>__ReferenceID38</x:Reference>
      <x:Reference>__ReferenceID39</x:Reference>
      <x:Reference>__ReferenceID40</x:Reference>
      <x:Reference>__ReferenceID41</x:Reference>
      <x:Reference>__ReferenceID42</x:Reference>
      <x:Reference>__ReferenceID43</x:Reference>
      <x:Reference>__ReferenceID44</x:Reference>
      <x:Reference>__ReferenceID45</x:Reference>
      <x:Reference>__ReferenceID25</x:Reference>
      <x:Reference>__ReferenceID46</x:Reference>
      <x:Reference>__ReferenceID47</x:Reference>
      <x:Reference>__ReferenceID48</x:Reference>
      <x:Reference>__ReferenceID49</x:Reference>
    </Flowchart>
  </hocbw:JobLifecycle.Implementation>
</hocbw:JobLifecycle>